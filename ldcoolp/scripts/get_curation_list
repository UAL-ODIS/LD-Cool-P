#!/usr/bin/env python

from os.path import dirname
import argparse
import configparser

from ldcoolp.curation.api import figshare
from ldcoolp.curation import depositor_name

# Version and branch info
from ldcoolp import __version__
from ldcoolp.get_branch_name import get_active_branch_name
from ldcoolp import __file__ as library_path

# Read in default configuration file
config = configparser.ConfigParser()

cols_order = ['article_id', 'id', 'depositor_name', 'title', 'account_id',
              'modified_date', 'created_date']

library_root_path = dirname(dirname(library_path))  # Retrieve parent directory to ldcoolp


if __name__ == '__main__':
    # Parse command-line arguments
    parser = argparse.ArgumentParser(description='Command-line driver for LD-Cool-P curation list retrieval.')
    parser.add_argument('--config', required=True, help='path to configuration file')
    args = parser.parse_args()

    branch_name = get_active_branch_name(library_root_path)

    banner_message = f"""
    This is the command-line tool to retrieve the list of pending curation.
    LD-Cool-P branch: {branch_name}
    LD-Cool-P version: {__version__}
    Created by Chun Ly
    Issues? Submit a GitHub ticket: https://github.com/ualibraries/LD_Cool_P/issues/new
    """
    print(banner_message)

    config.read(args.config)

    api_token = config.get('figshare', 'api_token')
    stage_flag = config.getboolean('figshare', 'stage')
    fs_admin = figshare.FigshareInstituteAdmin(token=api_token, stage=stage_flag)

    print("STATUS: Retrieving list now ...")

    curation_df = fs_admin.get_curation_list()

    print("STATUS: Truncating to pending list ...")
    pending_curation_df = curation_df.loc[curation_df['status'] == 'pending']
    pending_curation_article = pending_curation_df['article_id'].tolist()

    depositor_names = ['N/A'] * len(pending_curation_df)
    titles = ['N/A'] * len(pending_curation_df)

    print("STATUS: Populating depositor_name and titles ...")
    for ii in range(len(pending_curation_df)):
        dn = depositor_name.DepositorName(pending_curation_article[ii],
                                          fs_admin, verbose=False)

        depositor_names[ii] = dn.name_dict['simplify_fullName']
        titles[ii] = dn.name_dict['title'][:30] + "..."

    # Make shorter title name
    pending_curation_df.insert(2, 'depositor_name', depositor_names)
    pending_curation_df.insert(3, 'title', titles)

    print("****************************")
    print("List of pending curation ...")
    print(pending_curation_df[cols_order].to_markdown())
    # print(pending_curation_df[cols_order].to_markdown(index=False))  # This require v1.1.0

    print("****************************")
    print("Exit 0")
